// Code generated by MockGen. DO NOT EDIT.
// Source: internal/transaction/repositories/transaction_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	models "kasikorn-line-api/internal/transaction/repositories/models"
	error "kasikorn-line-api/pkg/error"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTransactionRepository is a mock of TransactionRepository interface.
type MockTransactionRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionRepositoryMockRecorder
}

// MockTransactionRepositoryMockRecorder is the mock recorder for MockTransactionRepository.
type MockTransactionRepositoryMockRecorder struct {
	mock *MockTransactionRepository
}

// NewMockTransactionRepository creates a new mock instance.
func NewMockTransactionRepository(ctrl *gomock.Controller) *MockTransactionRepository {
	mock := &MockTransactionRepository{ctrl: ctrl}
	mock.recorder = &MockTransactionRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionRepository) EXPECT() *MockTransactionRepositoryMockRecorder {
	return m.recorder
}

// GetTransactionByTransactionID mocks base method.
func (m *MockTransactionRepository) GetTransactionByTransactionID(transactionID string) (*models.Transaction, *error.ErrorResponse) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionByTransactionID", transactionID)
	ret0, _ := ret[0].(*models.Transaction)
	ret1, _ := ret[1].(*error.ErrorResponse)
	return ret0, ret1
}

// GetTransactionByTransactionID indicates an expected call of GetTransactionByTransactionID.
func (mr *MockTransactionRepositoryMockRecorder) GetTransactionByTransactionID(transactionID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionByTransactionID", reflect.TypeOf((*MockTransactionRepository)(nil).GetTransactionByTransactionID), transactionID)
}

// GetTransactionByUserID mocks base method.
func (m *MockTransactionRepository) GetTransactionByUserID(userID string) ([]models.Transaction, *error.ErrorResponse) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionByUserID", userID)
	ret0, _ := ret[0].([]models.Transaction)
	ret1, _ := ret[1].(*error.ErrorResponse)
	return ret0, ret1
}

// GetTransactionByUserID indicates an expected call of GetTransactionByUserID.
func (mr *MockTransactionRepositoryMockRecorder) GetTransactionByUserID(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionByUserID", reflect.TypeOf((*MockTransactionRepository)(nil).GetTransactionByUserID), userID)
}
